/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Government.Accounts;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.EnterpriseDirectory;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.RemoteClinicEnterprise;
import Business.Network.Network;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabRequestEquipment;
import Business.WorkQueue.TravelFundRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.Hospital.HospitalManageOrganizationJPanel;
import utility.Constants;

/**
 *
 * @author Ashish
 */
public class AccountsManageFundRequestJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    EcoSystem business;
    EnterpriseDirectory ed;
    UserAccount account;
    public AccountsManageFundRequestJPanel(JPanel userProcessContainer,UserAccount account, EnterpriseDirectory ed,EcoSystem business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.business=business;
        this.ed=ed; 
        this.account=account;
        populateRequestTable();
    }
public void populateRequestTable()
{
    DefaultTableModel model = (DefaultTableModel) tblRequest.getModel();

    model.setRowCount(0); 
    for (Enterprise e : ed.getEnterpriseList()) 
    {
        if(e instanceof HospitalEnterprise)
        {
            for (WorkRequest request : ((HospitalEnterprise)e).getFundReqQueue().getWorkRequestList())
            {
                Object[] row = new Object[4];
                row[0] = (LabRequestEquipment)request;
                row[1] = e.getName()+" ("+request.getTrail().getSender(Constants.TrailLevel.Level2)+")";
                row[2] = request.getTrail().getReciever(Constants.TrailLevel.Level2)==null?"--":request.getTrail().getReciever(Constants.TrailLevel.Level2);                
                row[3] = request.getStatus() == null ? "Waiting" : request.getStatus();
                model.addRow(row);
            }
        }
        else if(e instanceof RemoteClinicEnterprise)
        {
            for (WorkRequest request : ((RemoteClinicEnterprise)e).getFundReqQueue().getWorkRequestList())
            {
                Object[] row = new Object[4];
                row[0] = (TravelFundRequest)request;
                row[1] = e.getName()+" ("+request.getTrail().getSender(Constants.TrailLevel.Level2)+")";
                row[2] = request.getTrail().getReciever(Constants.TrailLevel.Level2)==null?"--":request.getTrail().getReciever(Constants.TrailLevel.Level2);                
                row[3] = request.getStatus() == null ? "Waiting" : request.getStatus();
                model.addRow(row);
            }
        }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequest = new javax.swing.JTable();
        btnViewReq = new javax.swing.JButton();
        btnProcessReq = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        assignJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(44, 62, 80));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 36)); // NOI18N
        jLabel2.setText("Accounts Manager");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Request ID", "Sender", "Reciever", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequest);

        btnViewReq.setText("View Request");
        btnViewReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewReqActionPerformed(evt);
            }
        });

        btnProcessReq.setText("Process Request");
        btnProcessReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessReqActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewReq)
                    .addComponent(btnProcessReq)
                    .addComponent(btnBack)
                    .addComponent(assignJButton))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnViewReq)
                        .addGap(18, 18, 18)
                        .addComponent(btnProcessReq)
                        .addGap(18, 18, 18)
                        .addComponent(assignJButton)
                        .addGap(18, 18, 18)
                        .addComponent(btnBack)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewReqActionPerformed
        int row = tblRequest.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a request!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        LabRequestEquipment request=(LabRequestEquipment)tblRequest.getValueAt(row, 0);
        AccountsViewRequestJPanel panel = new AccountsViewRequestJPanel(userProcessContainer,request );
        userProcessContainer.add("AccountsViewRequestJPanel", panel);
        utility.Validator.FormatPanel(panel,0);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);        
    }//GEN-LAST:event_btnViewReqActionPerformed

    private void btnProcessReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessReqActionPerformed
        int selectedRow = tblRequest.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select atleast one row.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest req=(WorkRequest)tblRequest.getValueAt(selectedRow, 0);
        if(req instanceof LabRequestEquipment)
        {
            LabRequestEquipment request=(LabRequestEquipment)tblRequest.getValueAt(selectedRow, 0);
            if((request).getStatus()==Constants.Status.Processing_AM ||(request).getStatus()==Constants.Status.Resolved_AM)
            {
                AccountsProcessFundRequestJPanel panel = new AccountsProcessFundRequestJPanel(userProcessContainer,ed,account,request );
                userProcessContainer.add("AccountsProcessFundRequestJPanel", panel);
                utility.Validator.FormatPanel(panel,0);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);    
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Request is not pending to be processed, first assign the request or check request status.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
        else if(req instanceof TravelFundRequest)
        {
            TravelFundRequest request=(TravelFundRequest)tblRequest.getValueAt(selectedRow, 0);
            if((request).getStatus()==Constants.Status.Processing_AM ||(request).getStatus()==Constants.Status.Resolved_AM)
            {
                AccountsProcessFundRequestJPanel panel = new AccountsProcessFundRequestJPanel(userProcessContainer,ed,account,request );
                userProcessContainer.add("AccountsProcessFundRequestJPanel", panel);
                utility.Validator.FormatPanel(panel,0);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);    
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Request is not pending to be processed, first assign the request or check request status.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnProcessReqActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = tblRequest.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select atleast one row.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        WorkRequest request = (WorkRequest)tblRequest.getValueAt(selectedRow, 0);
        if(request.getStatus()==Constants.Status.Forwarded)
        {
            request.getTrail().updateTrail(Constants.Status.Processing_AM, account,null);
            request.setReceiver(account);
            request.setStatus(Constants.Status.Processing_AM);
            populateRequestTable();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Request is not pending to be assigned anymore.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_assignJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnProcessReq;
    private javax.swing.JButton btnViewReq;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRequest;
    // End of variables declaration//GEN-END:variables
}
