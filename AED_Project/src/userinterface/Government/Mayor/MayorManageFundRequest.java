/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Government.Mayor;

import Business.Enterprise.Enterprise;
import Business.Enterprise.EnterpriseDirectory;
import Business.Enterprise.HospitalEnterprise;
import Business.Organization.MayorOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabRequestEquipment;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import utility.Constants;

/**
 *
 * @author Ashish
 */
public class MayorManageFundRequest extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EnterpriseDirectory ed;
    private UserAccount account;
    private MayorOrganization mo;
    public MayorManageFundRequest(JPanel userProcessContainer, UserAccount account,MayorOrganization mo, EnterpriseDirectory ed) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ed=ed;
        this.account=account;
        this.mo=mo;
        populateFundRequests(); 
        
    }
    public void populateFundRequests()
    {
        DefaultTableModel model = (DefaultTableModel) tblRequest.getModel();

        model.setRowCount(0); 
        for (WorkRequest request : mo.getFundReqQueue().getWorkRequestList())
         {
             Object[] row = new Object[4];
             row[0] = request;
             if(request instanceof LabRequestEquipment)
             {
                row[1] = request.getRequestedFor().getName()+" ("+request.getTrail().getSender(Constants.TrailLevel.Level3)+")";
                row[2] = request.getTrail().getReciever(Constants.TrailLevel.Level3)==null?"--":request.getTrail().getReciever(Constants.TrailLevel.Level3);                    
             }
             else
             {
                row[1] = request.getSender();
                row[2] = request.getReceiver();
             }
             row[3] = request.getStatus() == null ? "Waiting" : request.getStatus();
             model.addRow(row);
         }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequest = new javax.swing.JTable();
        btnViewReq = new javax.swing.JButton();
        btnProcessReq = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        assignJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(44, 62, 80));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 36)); // NOI18N
        jLabel2.setText("Process Fund Request");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Request ID", "Sender", "Reciever", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequest);

        btnViewReq.setText("View Request");
        btnViewReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewReqActionPerformed(evt);
            }
        });

        btnProcessReq.setText("Process Request");
        btnProcessReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessReqActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewReq)
                    .addComponent(btnProcessReq)
                    .addComponent(btnBack)
                    .addComponent(assignJButton))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnViewReq)
                        .addGap(18, 18, 18)
                        .addComponent(btnProcessReq)
                        .addGap(18, 18, 18)
                        .addComponent(assignJButton)
                        .addGap(18, 18, 18)
                        .addComponent(btnBack)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(196, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
                userProcessContainer.remove(this);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewReqActionPerformed
        
        int row = tblRequest.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a request!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(tblRequest.getValueAt(row, 0) instanceof LabRequestEquipment)
        {
        LabRequestEquipment request=(LabRequestEquipment)tblRequest.getValueAt(row, 0);
        MayorViewRequestJPanel panel = new MayorViewRequestJPanel(userProcessContainer,request );
        userProcessContainer.add("MayorViewRequestJPanel", panel);
        utility.Validator.FormatPanel(panel,0);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
        else{JOptionPane.showMessageDialog(null, "View for this request not possible!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;}
    }//GEN-LAST:event_btnViewReqActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

                int selectedRow = tblRequest.getSelectedRow();
        
                if (selectedRow < 0){
                        JOptionPane.showMessageDialog(null, "Please select atleast one row.", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
        
                WorkRequest request = (WorkRequest)tblRequest.getValueAt(selectedRow, 0);
                if(request.getStatus()==Constants.Status.Forwarded_AM)
                {
                        request.getTrail().updateTrail(Constants.Status.Processing_M, account,null);
                        request.setReceiver(account);
                        request.setStatus(Constants.Status.Processing_M);
                        populateFundRequests();
                    }
                else
                {
                        JOptionPane.showMessageDialog(null, "Request is not pending to be assigned anymore.", "Warning", JOptionPane.WARNING_MESSAGE);
                    }
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void btnProcessReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessReqActionPerformed
        int selectedRow = tblRequest.getSelectedRow();
                if (selectedRow < 0){
                        JOptionPane.showMessageDialog(null, "Please select atleast one row.", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                WorkRequest request=(WorkRequest)tblRequest.getValueAt(selectedRow, 0);
                if(request.getStatus()==Constants.Status.Processing_M)
                {
                        MayorProcessFundRequestJPanel panel = new MayorProcessFundRequestJPanel(userProcessContainer,ed,account,request );
                        userProcessContainer.add("MayorProcessFundRequestJPanel", panel);
                        utility.Validator.FormatPanel(panel,0);
                        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                        layout.next(userProcessContainer);
                    }
                else
                {
                        JOptionPane.showMessageDialog(null, "Request is not pending to be processed, first assign the request or check request status.", "Warning", JOptionPane.WARNING_MESSAGE);
                 }
    }//GEN-LAST:event_btnProcessReqActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnProcessReq;
    private javax.swing.JButton btnViewReq;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRequest;
    // End of variables declaration//GEN-END:variables
}
